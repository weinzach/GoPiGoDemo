{"version":3,"sources":["../../test/publish-subscribe.js"],"names":["cote","require","cb","key","publisher","Publisher","name","subscriber","Subscriber","on","publish","args","console","log","req","t","deepEqual","end","environment","is","namespace"],"mappings":"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","file":"publish-subscribe.js","sourcesContent":["import test from 'ava';\nimport LogSuppress from 'log-suppress';\n\nvar cote = require('..')();\n// LogSuppress.init(console);\n\ntest.cb('classic publisher / subscriber', t => {\n    var key = 'test 1';\n\n    var publisher = new cote.Publisher({ name: 'publisher', key });\n    var subscriber = new cote.Subscriber({ name: 'subscriber', key });\n\n    publisher.on('ready', () => {\n        subscriber.on('connect', _ => {\n            publisher.publish('test', { args: [1, 2, 3] });\n        });\n    });\n\n    subscriber.on('test', req => {\n        console.log('def', req);\n\n        t.deepEqual(req.args, [1, 2, 3], 'Arguments should have been [1, 2, 3]');\n        t.end();\n    });\n});\n\n\ntest.cb('Environment test', t => {\n    var key = 'test 2';\n\n    var cote = require('..')({environment: 'test'});\n\n    var publisher = new cote.Publisher({ name: 'publisher', key });\n    var subscriber = new cote.Subscriber({ name: 'subscriber', key });\n\n    publisher.on('ready', () => {\n        subscriber.on('connect', _ => {\n            publisher.publish('test', { args: [1, 2, 4] });\n        });\n    });\n\n    subscriber.on('test', req => {\n        console.log('env', req);\n\n        t.deepEqual(req.args, [1, 2, 4], 'Arguments should have been [1, 2, 4]');\n        t.is(cote.Publisher.environment, 'test:');\n        t.end();\n    });\n});\n\ntest.cb('Namespace test', t => {\n    var key = 'test 2';\n    var namespace = 'ns';\n\n    var cote = require('..')({environment: 'test'});\n\n    var publisher = new cote.Publisher({ name: 'publisher', key, namespace });\n    var subscriber = new cote.Subscriber({ name: 'subscriber', key, namespace });\n\n    publisher.on('ready', () => {\n        subscriber.on('connect', _ => {\n            publisher.publish('test', { args: [1, 2, 5] });\n        });\n    });\n\n    subscriber.on('test', req => {\n        console.log('ns', req);\n        t.deepEqual(req.args, [1, 2, 5], 'Arguments should have been [1, 2, 5]');\n        t.is(cote.Publisher.environment, 'test:');\n        t.end();\n    });\n});\n"]}