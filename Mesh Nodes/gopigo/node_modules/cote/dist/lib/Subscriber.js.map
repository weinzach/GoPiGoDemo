{"version":3,"sources":["../../lib/Subscriber.js"],"names":["EventEmitter","require","EventEmitter2","util","Discovery","Configurable","Monitorable","Component","axon","module","exports","advertisement","discoveryOptions","subscribesTo","_on","obj","sock","SubEmitterSocket","connect","port","Subscriber","useHostNames","hostName","address","on","emit","formatTypeWithNamespace","set","forEach","namespace","topic","args","length","unshift","substr","type","listener"],"mappings":";;;;;;;;;;;;AAAA,IAAIA,eAAeC,QAAQ,eAAR,EAAyBC,aAA5C;AAAA,IACIC,OAAOF,QAAQ,MAAR,CADX;AAAA,IAEIG,YAAYH,QAAQ,aAAR,CAFhB;AAAA,IAGII,eAAeJ,QAAQ,gBAAR,CAHnB;AAAA,IAIIK,cAAcL,QAAQ,eAAR,CAJlB;AAAA,IAKIM,YAAYN,QAAQ,aAAR,CALhB;AAAA,IAMIO,OAAOP,QAAQ,gBAAR,CANX;;AAQAQ,OAAOC,OAAP;AAAA;;AACI,wBAAYC,aAAZ,EAA2BC,gBAA3B,EAA6C;AAAA;;AAAA,4HACnCD,aADmC,EACpBC,gBADoB;;AAGzC,cAAKD,aAAL,CAAmBE,YAAnB,GAAkC,MAAKF,aAAL,CAAmBE,YAAnB,IAAmC,CAAC,GAAD,CAArE;;AAEA,cAAKC,GAAL,CAAS,OAAT,EAAkB,eAAO;AACrBC,gBAAIC,IAAJ,GAAW,IAAIR,KAAKS,gBAAT,EAAX;AACAF,gBAAIC,IAAJ,CAASA,IAAT,CAAcE,OAAd,CAAsBH,IAAIJ,aAAJ,CAAkBQ,IAAxC,EAA8CC,WAAWC,YAAX,GAA0BN,IAAIO,QAA9B,GAAyCP,IAAIQ,OAA3F;AACAR,gBAAIC,IAAJ,CAASA,IAAT,CAAcQ,EAAd,CAAiB,SAAjB,EAA4B,aAAK;AAC7B,sBAAKC,IAAL,CAAU,MAAKC,uBAAL,CAA6B,SAA7B,CAAV,EAAmDX,GAAnD;AACH,aAFD;;AAIAA,gBAAIC,IAAJ,CAASA,IAAT,CAAcW,GAAd,CAAkB,eAAlB,EAAmC,CAAnC;;AAEAZ,gBAAIC,IAAJ,CAASA,IAAT,CAAcQ,EAAd,CAAiB,cAAjB,EAAiC;AAAA,uBAAK,MAAKC,IAAL,CAAU,SAAV,EAAqBV,GAArB,CAAL;AAAA,aAAjC;;AAEA,kBAAKJ,aAAL,CAAmBE,YAAnB,CAAgCe,OAAhC,CAAwC,iBAAS;AAC7C,oBAAIC,YAAY,EAAhB;AACA,oBAAI,MAAKlB,aAAL,CAAmBkB,SAAvB,EACIA,YAAY,MAAKlB,aAAL,CAAmBkB,SAAnB,GAA+B,IAA3C;;AAEJC,wBAAQ,cAAcD,SAAd,GAA0BC,KAAlC;;AAEA,iBAAC,iBAAS;AACNf,wBAAIC,IAAJ,CAASQ,EAAT,CAAYM,KAAZ,EAAmB,YAAa;AAAA,0DAATC,IAAS;AAATA,gCAAS;AAAA;;AAC5B,4BAAIA,KAAKC,MAAL,IAAe,CAAnB,EACID,KAAKE,OAAL,CAAaH,MAAMI,MAAN,CAAa,CAAb,CAAb,EADJ,KAGIH,KAAK,CAAL,IAAUF,YAAYE,KAAK,CAAL,CAAtB;;AAEJ,8BAAKN,IAAL,cAAaM,IAAb;AACH,qBAPD;AAQH,iBATD,EASGD,KATH;AAUH,aAjBD;AAkBH,SA7BD;AALyC;AAmC5C;;AApCL;AAAA;AAAA,2BAsCOK,IAtCP,EAsCaC,QAtCb,EAsCuB;AACf,8HAAgB,KAAKV,uBAAL,CAA6BS,IAA7B,CAAhB,EAAoDC,QAApD;AACH;AAxCL;AAAA;AAAA,4BA0CQD,IA1CR,EA0CcC,QA1Cd,EA0CwB;AAChB,8HAAgBD,IAAhB,EAAsBC,QAAtB;AACH;AA5CL;AAAA;AAAA,gDA8C4BD,IA9C5B,EA8CkC;AAC1B,gBAAIN,YAAY,EAAhB;AACA,gBAAI,KAAKlB,aAAL,CAAmBkB,SAAvB,EACIA,YAAY,KAAKlB,aAAL,CAAmBkB,SAAnB,GAA+B,IAA3C;;AAEJ,mBAAOA,YAAYM,IAAnB;AACH;AApDL;AAAA;AAAA,4BAsDe;AAAE,mBAAO,aAAP;AAAuB;AAtDxC;AAAA;AAAA,4BAuDe;AAAE,mBAAO,aAAP;AAAuB;AAvDxC;;AAAA;AAAA,EAA0C7B,YAAYD,aAAaE,SAAb,CAAZ,CAA1C","file":"Subscriber.js","sourcesContent":["var EventEmitter = require('eventemitter2').EventEmitter2,\n    util = require('util'),\n    Discovery = require('./Discovery'),\n    Configurable = require('./Configurable'),\n    Monitorable = require('./Monitorable'),\n    Component = require('./Component'),\n    axon = require('@dashersw/axon');\n\nmodule.exports = class Subscriber extends Monitorable(Configurable(Component)) {\n    constructor(advertisement, discoveryOptions) {\n        super(advertisement, discoveryOptions);\n\n        this.advertisement.subscribesTo = this.advertisement.subscribesTo || ['*'];\n\n        this._on('added', obj => {\n            obj.sock = new axon.SubEmitterSocket();\n            obj.sock.sock.connect(obj.advertisement.port, Subscriber.useHostNames ? obj.hostName : obj.address);\n            obj.sock.sock.on('connect', _ => {\n                this.emit(this.formatTypeWithNamespace('connect'), obj)\n            });\n\n            obj.sock.sock.set('retry timeout', 0);\n\n            obj.sock.sock.on('socket close', _ => this.emit('removed', obj));\n\n            this.advertisement.subscribesTo.forEach(topic => {\n                var namespace = '';\n                if (this.advertisement.namespace)\n                    namespace = this.advertisement.namespace + '::';\n\n                topic = 'message::' + namespace + topic;\n\n                (topic => {\n                    obj.sock.on(topic, (...args) => {\n                        if (args.length == 1)\n                            args.unshift(topic.substr(9));\n                        else\n                            args[0] = namespace + args[0];\n\n                        this.emit(...args);\n                    });\n                })(topic);\n            });\n        });\n    }\n\n    on(type, listener) {\n        return super.on(this.formatTypeWithNamespace(type), listener);\n    }\n\n    _on(type, listener) {\n        return super.on(type, listener);\n    }\n\n    formatTypeWithNamespace(type) {\n        var namespace = '';\n        if (this.advertisement.namespace)\n            namespace = this.advertisement.namespace + '::';\n\n        return namespace + type;\n    }\n\n    get type() { return 'sub-emitter'; }\n    get oppo() { return 'pub-emitter'; }\n}\n"]}